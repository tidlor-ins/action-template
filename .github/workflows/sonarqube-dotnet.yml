name: sonarqube-scan

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

jobs:
  build:
    name: Build
    runs-on: self-hosted
    container: insuranceitteam/dotnet-sonarqube:latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: |
          export DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0   
          export no_proxy=ins-gitlab.ntl.co.th
          export PATH=\"$PATH:$HOME/.dotnet/tools\"
          dotnet sonarscanner begin /k:\"tidlor-ins_product-fact.api\" /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\" /d:\"sonar.host.url=${{ secrets.SONAR_HOST_URL }}\" /d:sonar.verbose=true 
          dotnet restore -s http://api.nuget.org/v3/index.json
          dotnet build
          dotnet sonarscanner end /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\"
        name: Run Sonarscanner
      # - name: Cache SonarQube packages
      #   uses: actions/cache@v1
      #   with:
      #     path: ~\sonar\cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar
      # - name: Cache SonarQube scanner
      #   id: cache-sonar-scanner
      #   uses: actions/cache@v1
      #   with:
      #     path: .\.sonar\scanner
      #     key: ${{ runner.os }}-sonar-scanner
      #     restore-keys: ${{ runner.os }}-sonar-scanner
      # - name: Install SonarQube scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   shell: powershell
      #   run: |
      #     New-Item -Path .\.sonar\scanner -ItemType Directory
      #     dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      # - name: Build and analyze
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #   shell: powershell
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"tidlor-ins_product-fact.api" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
      #     dotnet build
      #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
